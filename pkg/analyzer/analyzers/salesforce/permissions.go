// Code generated by go generate; DO NOT EDIT.
package salesforce

import "errors"

type Permission int

const (
    Invalid Permission = iota
    CdpQueryApi Permission = iota
    PardotApi Permission = iota
    CdpProfileApi Permission = iota
    ChatterApi Permission = iota
    CdpIngestApi Permission = iota
    EclairApi Permission = iota
    WaveApi Permission = iota
    Api Permission = iota
    CustomPermissions Permission = iota
    Id Permission = iota
    Profile Permission = iota
    Email Permission = iota
    Address Permission = iota
    Phone Permission = iota
    Lightning Permission = iota
    Content Permission = iota
    Openid Permission = iota
    Full Permission = iota
    RefreshToken Permission = iota
    OfflineAccess Permission = iota
    Visualforce Permission = iota
    Web Permission = iota
    ChatbotApi Permission = iota
    UserRegistrationApi Permission = iota
    ForgotPassword Permission = iota
    CdpApi Permission = iota
    SfapApi Permission = iota
    InteractionApi Permission = iota
)

var (
    PermissionStrings = map[Permission]string{
        CdpQueryApi: "cdp_query_api",
        PardotApi: "pardot_api",
        CdpProfileApi: "cdp_profile_api",
        ChatterApi: "chatter_api",
        CdpIngestApi: "cdp_ingest_api",
        EclairApi: "eclair_api",
        WaveApi: "wave_api",
        Api: "api",
        CustomPermissions: "custom_permissions",
        Id: "id",
        Profile: "profile",
        Email: "email",
        Address: "address",
        Phone: "phone",
        Lightning: "lightning",
        Content: "content",
        Openid: "openid",
        Full: "full",
        RefreshToken: "refresh_token",
        OfflineAccess: "offline_access",
        Visualforce: "visualforce",
        Web: "web",
        ChatbotApi: "chatbot_api",
        UserRegistrationApi: "user_registration_api",
        ForgotPassword: "forgot_password",
        CdpApi: "cdp_api",
        SfapApi: "sfap_api",
        InteractionApi: "interaction_api",
    }

    StringToPermission = map[string]Permission{
        "cdp_query_api": CdpQueryApi,
        "pardot_api": PardotApi,
        "cdp_profile_api": CdpProfileApi,
        "chatter_api": ChatterApi,
        "cdp_ingest_api": CdpIngestApi,
        "eclair_api": EclairApi,
        "wave_api": WaveApi,
        "api": Api,
        "custom_permissions": CustomPermissions,
        "id": Id,
        "profile": Profile,
        "email": Email,
        "address": Address,
        "phone": Phone,
        "lightning": Lightning,
        "content": Content,
        "openid": Openid,
        "full": Full,
        "refresh_token": RefreshToken,
        "offline_access": OfflineAccess,
        "visualforce": Visualforce,
        "web": Web,
        "chatbot_api": ChatbotApi,
        "user_registration_api": UserRegistrationApi,
        "forgot_password": ForgotPassword,
        "cdp_api": CdpApi,
        "sfap_api": SfapApi,
        "interaction_api": InteractionApi,
    }

    PermissionIDs = map[Permission]int{
        CdpQueryApi: 1,
        PardotApi: 2,
        CdpProfileApi: 3,
        ChatterApi: 4,
        CdpIngestApi: 5,
        EclairApi: 6,
        WaveApi: 7,
        Api: 8,
        CustomPermissions: 9,
        Id: 10,
        Profile: 11,
        Email: 12,
        Address: 13,
        Phone: 14,
        Lightning: 15,
        Content: 16,
        Openid: 17,
        Full: 18,
        RefreshToken: 19,
        OfflineAccess: 20,
        Visualforce: 21,
        Web: 22,
        ChatbotApi: 23,
        UserRegistrationApi: 24,
        ForgotPassword: 25,
        CdpApi: 26,
        SfapApi: 27,
        InteractionApi: 28,
    }

    IdToPermission = map[int]Permission{
        1: CdpQueryApi,
        2: PardotApi,
        3: CdpProfileApi,
        4: ChatterApi,
        5: CdpIngestApi,
        6: EclairApi,
        7: WaveApi,
        8: Api,
        9: CustomPermissions,
        10: Id,
        11: Profile,
        12: Email,
        13: Address,
        14: Phone,
        15: Lightning,
        16: Content,
        17: Openid,
        18: Full,
        19: RefreshToken,
        20: OfflineAccess,
        21: Visualforce,
        22: Web,
        23: ChatbotApi,
        24: UserRegistrationApi,
        25: ForgotPassword,
        26: CdpApi,
        27: SfapApi,
        28: InteractionApi,
    }
)

// ToString converts a Permission enum to its string representation
func (p Permission) ToString() (string, error) {
    if str, ok := PermissionStrings[p]; ok {
        return str, nil
    }
    return "", errors.New("invalid permission")
}

// ToID converts a Permission enum to its ID
func (p Permission) ToID() (int, error) {
    if id, ok := PermissionIDs[p]; ok {
        return id, nil
    }
    return 0, errors.New("invalid permission")
}

// PermissionFromString converts a string representation to its Permission enum
func PermissionFromString(s string) (Permission, error) {
    if p, ok := StringToPermission[s]; ok {
        return p, nil
    }
    return 0, errors.New("invalid permission string")
}

// PermissionFromID converts an ID to its Permission enum
func PermissionFromID(id int) (Permission, error) {
    if p, ok := IdToPermission[id]; ok {
        return p, nil
    }
    return 0, errors.New("invalid permission ID")
}
